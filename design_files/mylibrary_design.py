# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mylibrary_design.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import icons

class Ui_LibraryWindow(object):
    def setupUi(self, LibraryWindow):
        LibraryWindow.setObjectName("LibraryWindow")
        LibraryWindow.setFixedSize(694, 800)
        LibraryWindow.setStyleSheet("")
        LibraryWindow.setAnimated(True)
        LibraryWindow.setFocus()
        LibraryWindow.setWindowIcon(QtGui.QIcon(":/icons/main_icon.png"))

        self.centralwidget = QtWidgets.QWidget(LibraryWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.search_lineLib = QtWidgets.QLineEdit(self.centralwidget)
        self.search_lineLib.setGeometry(QtCore.QRect(500, 20, 181, 31))
        self.search_lineLib.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.search_lineLib.setStyleSheet("font: 12pt \"Constantia\";")
        self.search_lineLib.setAlignment(QtCore.Qt.AlignCenter)
        self.search_lineLib.setObjectName("search_lineLib")
        self.search_lineLib.setPlaceholderText("üîç Search module")

        self.lib_tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.lib_tableWidget.setGeometry(QtCore.QRect(10, 90, 678, 671))
        self.lib_tableWidget.setAutoScroll(True)
        self.lib_tableWidget.setRowCount(30)
        self.lib_tableWidget.setColumnCount(4)
        self.lib_tableWidget.setObjectName("tableWidget")
        # horizontal header
        self.lib_tableWidget.horizontalHeader().setSectionResizeMode(True)
        self.lib_tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.lib_tableWidget.horizontalHeader().setDefaultSectionSize(156)
        self.lib_tableWidget.horizontalHeader().setHighlightSections(True)
        self.lib_tableWidget.horizontalHeader().setMinimumSectionSize(39)
        self.lib_tableWidget.horizontalHeader().setSectionsClickable(False)
        # vertical header
        self.lib_tableWidget.verticalHeader().setVisible(True)
        self.lib_tableWidget.verticalHeader().setCascadingSectionResizes(False)
        self.lib_tableWidget.verticalHeader().setSectionResizeMode(True)
        self.lib_tableWidget.verticalHeader().setSectionsClickable(False)

        self.lib_tableWidget.setEditTriggers(QtWidgets.QTableWidget.NoEditTriggers)

        self.lib_tableWidget.setSelectionMode(False)
        self.lib_tableWidget.setHorizontalHeaderLabels(["module", "home-page", "renewal", "update"])
        # add tooltip
        self.lib_tableWidget.horizontalHeaderItem(0).setToolTip('''
            <h6 style="background-color: #faebd7; ">Module name. This is a file that contains Python code.</h6> 
        ''')
        self.lib_tableWidget.horizontalHeaderItem(1).setToolTip('''
            <h6 style="background-color: #faebd7; ">Link to module documentation.</h6> 
        ''')
        self.lib_tableWidget.horizontalHeaderItem(2).setToolTip('''
            <h6 style="background-color: #faebd7; ">Is there an update for the module.</h6> 
        ''')
        self.lib_tableWidget.horizontalHeaderItem(3).setToolTip('''
            <h6 style="background-color: #faebd7; ">Update button.</h6> 
        ''')
        LibraryWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(LibraryWindow)
        self.statusbar.setObjectName("statusbar")
        LibraryWindow.setStatusBar(self.statusbar)
        self.retranslateUi(LibraryWindow)
        QtCore.QMetaObject.connectSlotsByName(LibraryWindow)

    def retranslateUi(self, LibraryWindow):
        _translate = QtCore.QCoreApplication.translate
        LibraryWindow.setWindowTitle(_translate("LibraryWindow", "My modules"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    LibraryWindow = QtWidgets.QMainWindow()
    ui = Ui_LibraryWindow()
    ui.setupUi(LibraryWindow)
    LibraryWindow.show()
    sys.exit(app.exec_())
